<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.model.dao.VideoDao">

	<!-- 여러개가 나오더라도 resultType에는 리스트 형으로 쓰지 않는다 -->

	<!-- video 고유번호 | video 정보 검색 -->
	<select id="search" parameterType="int" resultType="video">
		select *
		from video v
		where v.vno=#{vno}
	</select>
	
	<!-- keyword | video 이름,설명,태그 키워드로 video 목록 검색 | 영상조회수 기준 내림차순 -->
	<select id="searchKeyword" parameterType="String" resultType="video">
		select *
		from video v inner join youtube_category yc
		using (ycano)
		where videoName like concat('%', #{keyword}, '%')
		 or videoDescription like concat('%', #{keyword}, '%')
		 or tags like concat('%', #{keyword}, '%')
		order by videoViewCount desc
	</select>
	
	<!-- 전체 video 목록 조회 | 영상조회수 기준 내림차순 -->
	<select id="searchAll" resultType="video">
		select *
		from video v inner join youtube_category yc
		using (ycano)
		order by v.videoViewCount desc
	</select>
	
	<!-- 정렬 조건, 검색 개수 | 정렬 조건(videoViewCount, videoCommentCount, good, bad, regDate)으로 정렬 후 검색 개수만큼 가져옴 | 정렬 기준으로 내림차순 -->
	<!-- 정렬 조건이 잘못 입력된 경우 아무것도 반환하지 않음 -->
	<select id="searchRanking" parameterType="java.util.Map" resultType="video">
		select *
		from video v inner join youtube_category yc
		using (ycano)
		<if test="searchCondition != null">
			<choose>
				<when test="searchCondition == 'videoViewCount'">
					order by v.videoViewCount desc limit ${num}
				</when>
				<when test="searchCondition == 'videoCommentCount'">
					order by v.videoCommentCount desc limit ${num}
				</when>
				<when test="searchCondition == 'good'">
					order by v.good desc limit ${num}
				</when>
				<when test="searchCondition == 'bad'">
					order by v.bad desc limit ${num}
				</when>
				<when test="searchCondition == 'regDate'">
					order by v.regDate desc limit ${num}
				</when>
				<otherwise>
					limit 0
				</otherwise>
			</choose>
		</if>
	</select>
</mapper>